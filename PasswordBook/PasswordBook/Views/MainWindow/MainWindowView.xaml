<Window x:Class="PasswordBook.Views.MainWindow.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:pb="clr-namespace:PasswordBook"
        xmlns:pbc="clr-namespace:PasswordBook.Contracts"
        xmlns:pbae="clr-namespace:PasswordBook.Views.AddEditEntry"
        xmlns:pbmp="clr-namespace:PasswordBook.Views.MasterPasswordEntry"
        xmlns:pbcb="clr-namespace:PasswordBook.Views.CommandBar"
        Icon="pack://application:,,,/Resources/ApplicationIcon.ico"
        Title="Password Book" 
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        Height="500" Width="650"
        MinWidth="300" MinHeight="200">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeThickness="1"
                                   Stroke="#4D90FE"
                                   SnapsToDevicePixels="true"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#4d90fe" Offset="0" />
                        <GradientStop Color="#4787ed" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#3079ED" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#2F5BB7" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#4D90FE" Offset="0" />
                                            <GradientStop Color="#357AE8" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalElementStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Margin" Value="5,0,3,0" />
        </Style>

        <DataTemplate DataType="{x:Type pbae:AddEditEntryViewModel}">
            <pbae:AddEditEntryView DataContext="{Binding}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pbmp:MasterPasswordEntryViewModel}">
            <pbmp:MasterPasswordEntryView DataContext="{Binding}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pbcb:CommandBarViewModel}">
            <pbcb:CommandBarView DataContext="{Binding}" />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <Border Background="WhiteSmoke"
                BorderThickness="0,0,0,1"
                BorderBrush="#E5E5E5">
            <Grid Margin="22">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <TextBox Grid.Column="0"
                         FontSize="16"
                         VerticalContentAlignment="Center"
                         GotFocus="TextBoxGotFocus"
                         LostFocus="TextBoxLostFocus"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Content="Search"
                        x:Name="searchButton"
                        Style="{StaticResource SearchButtonStyle}"
                        Grid.Column="1"
                        Height="29" Width="82"
                        Margin="15,0,0,0"
                        Command="{Binding SearchCommand}" />
            </Grid>
        </Border>
        
        <DataGrid Grid.Row="2"
                  BorderThickness="0"
                  ItemsSource="{Binding SearchResults}"
                  AutoGenerateColumns="False"
                  SelectionMode="Single"
                  SelectedItem="{Binding SelectedResult}"
                  HeadersVisibility="None"
                  GridLinesVisibility="None"
                  SelectionUnit="FullRow"
                  IsReadOnly="True"
                  Background="White"
                  Cursor="Hand"
                  Margin="11,0,0,0">
            <DataGrid.Resources>
                <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Focusable" Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="Transparent" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Focusable" Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border x:Name="ThumbBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,0,1" />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ThumbBorder" Property="Background" Value="#909090" />
                                        <Setter TargetName="ThumbBorder" Property="BorderBrush" Value="#666666" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Border x:Name="TrackBorder"
                        BorderThickness="1,0,0,0"
                        BorderBrush="Transparent"
                        Background="Transparent" />

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Margin="0">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="TrackThumb" 
                               Style="{StaticResource ScrollBarThumb}"
                               BorderBrush="#B6B6B6"
                               Background="#CBCBCB" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="TrackBorder" Value="#F2F2F2" />
                            <Setter Property="BorderBrush" TargetName="TrackBorder" Value="#D9D9D9" />
                            <Setter Property="Background" TargetName="TrackThumb" Value="#C0C0C0" />
                            <Setter Property="BorderBrush" TargetName="TrackThumb" Value="#9A9A9A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="Orientation" Value="Vertical" />
                    <Setter Property="Width" Value="12" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Margin" Value="15,0,0,0" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Height" Value="30" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="BorderBrush" Value="#E5E5E5" />
                    <Setter Property="Background" Value="#F3F3F3" />
                    <EventSetter Event="MouseDoubleClick" Handler="ItemDoubleClick" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFFFCC" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Title}" Width="*" ElementStyle="{StaticResource VerticalElementStyle}" />
                <DataGridTextColumn Binding="{Binding UserName}" Width="*" MaxWidth="90" ElementStyle="{StaticResource VerticalElementStyle}" />
                <DataGridTextColumn Binding="{Binding Password}" Width="*" MaxWidth="90" ElementStyle="{StaticResource VerticalElementStyle}" />
            </DataGrid.Columns>
        </DataGrid>

        <ContentControl Grid.Row="2" 
                        Content="{Binding AddEntryViewModel}"
                        Visibility="{Binding AddEntryViewModel.IsOpen, Converter={StaticResource BoolToVisibilityConverter}}"/>

        <ContentControl Grid.Row="2" 
                        Content="{Binding EditEntryViewModel}"
                        Visibility="{Binding EditEntryViewModel.IsOpen, Converter={StaticResource BoolToVisibilityConverter}}"/>

        <ContentControl Grid.Row="1"
                        Content="{Binding CommandBarViewModel}" />

        <ContentControl Grid.RowSpan="3"
                        Content="{Binding MasterPasswordEntryViewModel}"
                        Visibility="{Binding MasterPasswordEntryViewModel.IsOpen, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Grid>
</Window>
